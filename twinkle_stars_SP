#include <Adafruit_NeoPixel.h>
#include <math.h>

#define PIN 6
#define Pixels 205

// Parameter 1 = number of pixels in strip
// Parameter 2 = Arduino pin number (most are valid)
// Parameter 3 = pixel type flags, add together as needed:
//   NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)
//   NEO_KHZ400  400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)
//   NEO_GRB     Pixels are wired for GRB bitstream (most NeoPixel products)
//   NEO_RGB     Pixels are wired for RGB bitstream (v1 FLORA pixels, not v2)
Adafruit_NeoPixel strip = Adafruit_NeoPixel(Pixels, PIN, NEO_GRB + NEO_KHZ800);

// IMPORTANT: To reduce NeoPixel burnout risk, add 1000 uF capacitor across
// pixel power leads, add 300 - 500 Ohm resistor on first pixel's data input
// and minimize distance between Arduino and first pixel.  Avoid connecting
// on a live circuit...if you must, connect GND first.


float redStates;
float blueStates;
float greenStates;
float fadeRate = 0.96;

void setup() {
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'

  redStates = 0;
  greenStates = 0;
  blueStates = 0;

}

void loop () {
  starz ();
}

static void starz(){
 if (random(20) == 1) {
    uint16_t i = random(Pixels);
    if (redStates < 1 && greenStates < 1 && blueStates < 1) {
      redStates = random(256);
      greenStates = random(256);
      blueStates = random(256);
    }
  }

  for(uint16_t l = 0; l < Pixels; l++) {
    if (l == i) {
      strip.setPixelColor(l, redStates, greenStates, blueStates);

      if (redStates > 1) {
        redStates = (int)(redStates * fadeRate);

      if (greenStates[l] > 1) {
        greenStates = (int)(greenStates * fadeRate);
   
      if (blueStates[l] > 1) {
        blueStates = (int)(blueStates * fadeRate);
	  
    // add delay here to compensate for the time gained due to array handling 

    } else {
      strip.setPixelColor(l, 0, 0, 0);
    }
  }
  strip.show();
  delay(10);
}
